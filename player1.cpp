#include <stdlib.h>
#include <stdio.h>
#include <assert.h>
#include <string.h>
#include <unistd.h>
#include <netdb.h>
#include <sys/socket.h>
#include <sys/time.h>
#include <netinet/in.h>
#include <netinet/tcp.h>
#include <getopt.h>
#include <time.h>
#include <iostream>
#include "game.h"
#include "rng.h"
#include "net.h"
#include "evalHandTables.h"

#define random(x)(rand()%x)

int i = 0; // a number between 0 to 5 * MAX, when i > 2 * MAX we think opponent is aggressive, when 
           // otherwise we think the opponent is neutral
           // MAX is a hyperparameter we need to define

int MAX = 10;
bool record_change[1000][4] = {0};
int hand_global = 0;
int opponent_spent = 0;

double table[5304] = {0.330626, 0.0577997,
0.339008, 0.0582122,
0.349086, 0.0584442,
0.348315, 0.05665,
0.354282, 0.0543031,
0.376633, 0.0518772,
0.399926, 0.0488634,
0.425306, 0.0460403,
0.451945, 0.043402,
0.480766, 0.041373,
0.512409, 0.0393748,
0.554797, 0.0373888,
0.493841, 0.018969,
0.29248, 0.0613588,
0.301202, 0.0615692,
0.311765, 0.0618321,
0.310597, 0.0599701,
0.316976, 0.0574701,
0.340726, 0.0547906,
0.36515, 0.0517288,
0.392194, 0.0485487,
0.420302, 0.0459463,
0.451085, 0.0436456,
0.484002, 0.0418185,
0.5296, 0.0395932,
0.493676, 0.0189756,
0.292394, 0.0612717,
0.301423, 0.0615803,
0.31212, 0.0618266,
0.311019, 0.0598547,
0.316893, 0.0575093,
0.340905, 0.0547456,
0.364894, 0.0517345,
0.392217, 0.0486032,
0.420333, 0.0459996,
0.451005, 0.0437449,
0.484108, 0.0417323,
0.529331, 0.0395289,
0.493869, 0.0189817,
0.292148, 0.0613617,
0.301415, 0.0617038,
0.312412, 0.0616991,
0.3108, 0.0598437,
0.316914, 0.0573681,
0.340611, 0.0550004,
0.365198, 0.0515829,
0.392454, 0.0484868,
0.420408, 0.04604,
0.45106, 0.0437112,
0.484323, 0.0416664,
0.529447, 0.0396476,
0.330994, 0.0578072,
0.357302, 0.0582432,
0.367585, 0.0588708,
0.366889, 0.0568867,
0.372991, 0.0547303,
0.382904, 0.0516352,
0.407951, 0.0491277,
0.433945, 0.0462692,
0.460712, 0.043815,
0.489226, 0.0416866,
0.520738, 0.0396718,
0.563359, 0.0377478,
0.292604, 0.0612683,
0.528441, 0.0169897,
0.320323, 0.0615932,
0.331792, 0.0619965,
0.330474, 0.0602479,
0.337274, 0.0577079,
0.34749, 0.0546526,
0.374214, 0.0518663,
0.401813, 0.0487618,
0.429755, 0.0461561,
0.460323, 0.0439163,
0.493209, 0.0419161,
0.538415, 0.039681,
0.292509, 0.0614108,
0.528321, 0.0170798,
0.320599, 0.0615999,
0.331562, 0.0619447,
0.330966, 0.0602763,
0.337079, 0.0576062,
0.347465, 0.0546424,
0.374082, 0.0519525,
0.401606, 0.0489026,
0.429865, 0.0461743,
0.460145, 0.0439655,
0.493207, 0.0419392,
0.538484, 0.0398149,
0.292688, 0.06118,
0.528405, 0.0170573,
0.320294, 0.0616836,
0.331811, 0.0619926,
0.330767, 0.0601918,
0.337216, 0.0576042,
0.347476, 0.0546459,
0.374645, 0.0518915,
0.401626, 0.0488144,
0.429709, 0.0462235,
0.460049, 0.0439796,
0.493425, 0.0419152,
0.538649, 0.0397655,
0.338986, 0.058275,
0.357405, 0.05835,
0.385393, 0.0584586,
0.385081, 0.0570051,
0.390932, 0.0547503,
0.401225, 0.0519153,
0.414024, 0.0492635,
0.44191, 0.0464518,
0.468802, 0.0440637,
0.497692, 0.0418803,
0.528749, 0.0399562,
0.57135, 0.0379048,
0.301376, 0.061673,
0.320483, 0.061606,
0.562585, 0.0153747,
0.350986, 0.0615687,
0.350017, 0.0601431,
0.356679, 0.0577034,
0.366887, 0.0547978,
0.381036, 0.051697,
0.410368, 0.0489826,
0.438778, 0.0462928,
0.469195, 0.0440325,
0.502317, 0.0420747,
0.547543, 0.0398388,
0.301283, 0.0616195,
0.32079, 0.0615239,
0.562698, 0.0153414,
0.350557, 0.0616038,
0.35008, 0.0600742,
0.356521, 0.0576239,
0.367146, 0.0547542,
0.380559, 0.0516237,
0.410564, 0.0490248,
0.438788, 0.0463731,
0.469104, 0.0440666,
0.502252, 0.0420347,
0.547296, 0.0399972,
0.301434, 0.0616856,
0.320487, 0.06157,
0.562473, 0.0153746,
0.350872, 0.0616791,
0.350211, 0.0599958,
0.356729, 0.0576394,
0.36711, 0.0547154,
0.380646, 0.051716,
0.410386, 0.0490653,
0.438817, 0.0463588,
0.469259, 0.0441172,
0.502226, 0.0420244,
0.547313, 0.0399031,
0.349215, 0.0584374,
0.367633, 0.0587989,
0.385669, 0.058457,
0.403424, 0.0557629,
0.409957, 0.0538973,
0.420088, 0.0510726,
0.433065, 0.0481334,
0.449492, 0.0455191,
0.478196, 0.0433448,
0.507195, 0.0412055,
0.538535, 0.0392237,
0.580794, 0.0371163,
0.312156, 0.0618618,
0.331716, 0.0620975,
0.350636, 0.0615986,
0.596463, 0.0136753,
0.370449, 0.0584663,
0.376931, 0.0569202,
0.38742, 0.0538309,
0.40144, 0.0506375,
0.41882, 0.0477629,
0.448977, 0.0455385,
0.479639, 0.0432063,
0.512565, 0.0412636,
0.557591, 0.0389994,
0.312005, 0.0617405,
0.33182, 0.0620179,
0.350937, 0.0616124,
0.59644, 0.0137367,
0.369853, 0.0585044,
0.376968, 0.056841,
0.387321, 0.0538247,
0.401688, 0.050697,
0.418524, 0.0477951,
0.448962, 0.045734,
0.47954, 0.0432988,
0.51264, 0.0412214,
0.557515, 0.0390358,
0.312009, 0.0617502,
0.331882, 0.062092,
0.35082, 0.061529,
0.596476, 0.0137579,
0.369921, 0.0585873,
0.37681, 0.0567517,
0.387411, 0.0537263,
0.401493, 0.0505593,
0.418608, 0.0478249,
0.449228, 0.0455214,
0.479578, 0.0433219,
0.512785, 0.0412299,
0.557612, 0.0390858,
0.348377, 0.0567561,
0.367197, 0.0569832,
0.385111, 0.0570273,
0.40356, 0.0555906,
0.428229, 0.0508417,
0.438196, 0.0485145,
0.451472, 0.0457573,
0.467739, 0.042869,
0.485884, 0.0406558,
0.516785, 0.0386899,
0.548106, 0.0367554,
0.581732, 0.0345493,
0.310937, 0.0597892,
0.330661, 0.0602588,
0.350325, 0.060162,
0.370185, 0.0585927,
0.627052, 0.0116483,
0.396413, 0.0534629,
0.406972, 0.0509028,
0.420924, 0.0478346,
0.438435, 0.0449083,
0.45714, 0.042553,
0.489807, 0.0405563,
0.522701, 0.0386198,
0.558833, 0.0361445,
0.310975, 0.0600027,
0.330667, 0.0601392,
0.350082, 0.0601546,
0.36993, 0.0586733,
0.627129, 0.011706,
0.39617, 0.0534701,
0.406919, 0.0509238,
0.420957, 0.0478159,
0.438748, 0.0448537,
0.45704, 0.0425122,
0.49012, 0.040558,
0.52314, 0.0384343,
0.558768, 0.0361189,
0.310984, 0.0599267,
0.330873, 0.0600372,
0.35036, 0.0600772,
0.370054, 0.0587293,
0.627113, 0.0116073,
0.396309, 0.0534013,
0.407052, 0.0508388,
0.420987, 0.0477396,
0.43865, 0.0448791,
0.457179, 0.0427061,
0.490077, 0.0405428,
0.522791, 0.038553,
0.558935, 0.0362075,
0.354228, 0.0543052,
0.373303, 0.0545345,
0.390993, 0.054817,
0.409804, 0.054046,
0.4282, 0.0508923,
0.457154, 0.04499,
0.469963, 0.0424694,
0.486422, 0.0397436,
0.504711, 0.0373792,
0.525296, 0.035599,
0.558393, 0.0337745,
0.593994, 0.0319731,
0.31718, 0.057548,
0.337311, 0.0577215,
0.356486, 0.057794,
0.376733, 0.0567454,
0.396497, 0.0534849,
0.6573, 0.0102326,
0.426744, 0.0471943,
0.440752, 0.0444763,
0.458308, 0.0414504,
0.477155, 0.0391489,
0.4991, 0.037343,
0.534513, 0.03537,
0.571656, 0.0334883,
0.317151, 0.0574949,
0.337254, 0.0576651,
0.356578, 0.0578778,
0.376729, 0.0566546,
0.396494, 0.0534204,
0.657221, 0.0101816,
0.427122, 0.0470869,
0.440791, 0.0446051,
0.45865, 0.0415744,
0.477264, 0.0391191,
0.499329, 0.0373765,
0.533949, 0.0354549,
0.571495, 0.0334438,
0.317221, 0.0575406,
0.337213, 0.0577054,
0.356643, 0.057685,
0.376713, 0.0567717,
0.396536, 0.0533842,
0.657285, 0.0101813,
0.427128, 0.0471637,
0.44059, 0.0445878,
0.458241, 0.0414984,
0.477255, 0.0391486,
0.499117, 0.0371338,
0.534154, 0.0355407,
0.571815, 0.0335429,
0.376733, 0.0519713,
0.383027, 0.0517296,
0.401238, 0.0519679,
0.419828, 0.0512006,
0.43818, 0.048447,
0.456884, 0.0450179,
0.48838, 0.0388924,
0.504869, 0.0365893,
0.52318, 0.034131,
0.543893, 0.0320236,
0.567894, 0.0304766,
0.605523, 0.0286699,
0.340639, 0.0548531,
0.347571, 0.0547231,
0.367184, 0.054735,
0.387763, 0.0537433,
0.406816, 0.0508749,
0.426729, 0.0472496,
0.68728, 0.0089251,
0.460589, 0.0406537,
0.478382, 0.0380728,
0.497149, 0.0354549,
0.51917, 0.0333825,
0.544354, 0.0317296,
0.583641, 0.0299666,
0.341015, 0.0549391,
0.34766, 0.054648,
0.367232, 0.054683,
0.38729, 0.0538422,
0.406851, 0.0507739,
0.427074, 0.0471201,
0.687469, 0.0089305,
0.46071, 0.0405335,
0.477983, 0.0380936,
0.497182, 0.0355499,
0.519011, 0.0334101,
0.544202, 0.0318409,
0.583489, 0.0300438,
0.340809, 0.0547989,
0.34745, 0.0545354,
0.366961, 0.054718,
0.387389, 0.0537068,
0.407035, 0.0508852,
0.42683, 0.0471948,
0.687363, 0.0088748,
0.460609, 0.0405844,
0.478217, 0.0380889,
0.497217, 0.0355054,
0.519109, 0.0333449,
0.544269, 0.0317772,
0.583692, 0.0299915,
0.399771, 0.0488444,
0.408138, 0.0491012,
0.414114, 0.0491363,
0.433308, 0.0480926,
0.451362, 0.0456472,
0.469957, 0.0425679,
0.488295, 0.0388928,
0.523485, 0.0329559,
0.54112, 0.0311722,
0.562386, 0.0287517,
0.586726, 0.0268761,
0.615021, 0.0254905,
0.36509, 0.0516186,
0.374173, 0.0517964,
0.381069, 0.0515032,
0.401396, 0.0505749,
0.42103, 0.0477074,
0.440871, 0.0445436,
0.460558, 0.0406349,
0.71663, 0.007856,
0.498347, 0.0343395,
0.516524, 0.0322718,
0.538423, 0.0299204,
0.564025, 0.0280954,
0.594523, 0.0264523,
0.365336, 0.0516928,
0.374379, 0.0518746,
0.380799, 0.0517112,
0.401492, 0.0505957,
0.4212, 0.0477248,
0.440773, 0.0445715,
0.460759, 0.0406016,
0.716492, 0.0077949,
0.498008, 0.0342173,
0.516733, 0.0322042,
0.538097, 0.0299721,
0.563968, 0.0280746,
0.594318, 0.0264744,
0.365223, 0.0515067,
0.374127, 0.0518772,
0.381065, 0.0515775,
0.401285, 0.0505746,
0.421096, 0.0477294,
0.440832, 0.0444687,
0.460513, 0.0405705,
0.716524, 0.0078927,
0.498344, 0.0343445,
0.516473, 0.0323029,
0.538732, 0.0298217,
0.564029, 0.0280375,
0.594614, 0.0264714,
0.425329, 0.0459771,
0.433809, 0.0463913,
0.442096, 0.0464691,
0.449462, 0.0455756,
0.467998, 0.0428764,
0.486659, 0.0397126,
0.504911, 0.0365943,
0.523875, 0.0330737,
0.561837, 0.0273962,
0.581794, 0.025923,
0.60568, 0.0240055,
0.634936, 0.0222998,
0.392426, 0.0487647,
0.401373, 0.048797,
0.410677, 0.0489263,
0.418622, 0.0479108,
0.438436, 0.0448197,
0.458431, 0.0415839,
0.478125, 0.0378874,
0.498376, 0.0343505,
0.746822, 0.0070563,
0.538293, 0.0285056,
0.559319, 0.0268542,
0.584921, 0.0248474,
0.615815, 0.0230396,
0.392521, 0.0485653,
0.401842, 0.0489317,
0.410784, 0.0489155,
0.418588, 0.0478154,
0.438598, 0.044893,
0.458251, 0.0415664,
0.478243, 0.0380374,
0.498254, 0.0343006,
0.746704, 0.0070453,
0.538191, 0.0283926,
0.559227, 0.0269512,
0.584786, 0.0249174,
0.615752, 0.0231138,
0.392524, 0.0485713,
0.401465, 0.0487615,
0.410544, 0.0489834,
0.418615, 0.0477205,
0.438562, 0.0448136,
0.458114, 0.0416535,
0.478138, 0.0381085,
0.498197, 0.0342135,
0.746585, 0.007055,
0.537998, 0.028417,
0.559651, 0.0267589,
0.584773, 0.0248658,
0.615579, 0.0230855,
0.452373, 0.0435867,
0.460655, 0.0436569,
0.468844, 0.044065,
0.478427, 0.043319,
0.486006, 0.0406241,
0.504444, 0.0373751,
0.523465, 0.0340441,
0.541196, 0.0309616,
0.561805, 0.0275708,
0.590916, 0.0237143,
0.61488, 0.0218476,
0.644006, 0.0199171,
0.420443, 0.0460205,
0.429692, 0.046198,
0.438944, 0.0463237,
0.449241, 0.0455158,
0.457324, 0.0425796,
0.477333, 0.0391513,
0.497248, 0.035579,
0.516396, 0.0323065,
0.53834, 0.0284606,
0.77135, 0.0063779,
0.568941, 0.0246527,
0.594142, 0.0224971,
0.625264, 0.0205845,
0.420552, 0.0459938,
0.429768, 0.046258,
0.43876, 0.0463882,
0.448928, 0.0456717,
0.45716, 0.0426245,
0.47694, 0.0391218,
0.497072, 0.0355954,
0.516211, 0.0322794,
0.537878, 0.0284782,
0.771479, 0.0063149,
0.568867, 0.0246035,
0.594335, 0.0225987,
0.625281, 0.0205485,
0.420463, 0.0460607,
0.429657, 0.0461985,
0.438581, 0.0463928,
0.448972, 0.0455058,
0.457201, 0.0425431,
0.476988, 0.0392312,
0.497177, 0.0354547,
0.516395, 0.0322633,
0.538271, 0.0284805,
0.771551, 0.0063219,
0.569118, 0.0245549,
0.594256, 0.0225018,
0.625109, 0.0205567,
0.480863, 0.0413539,
0.489315, 0.0417053,
0.49761, 0.0419232,
0.507071, 0.0411191,
0.51675, 0.038713,
0.525333, 0.0355957,
0.544327, 0.0320862,
0.562127, 0.0289037,
0.581608, 0.0259636,
0.590891, 0.0237322,
0.623973, 0.0198819,
0.653085, 0.0178996,
0.451081, 0.0437927,
0.460224, 0.0437899,
0.468988, 0.0440761,
0.479726, 0.0431235,
0.490036, 0.0404968,
0.499151, 0.0371814,
0.51923, 0.0332989,
0.538828, 0.0300628,
0.559452, 0.0269136,
0.568957, 0.0245878,
0.79627, 0.0058689,
0.60459, 0.0204153,
0.634965, 0.0184815,
0.451116, 0.0436749,
0.460032, 0.0438477,
0.469159, 0.0440651,
0.479468, 0.0432339,
0.490216, 0.0405145,
0.499249, 0.0372001,
0.519114, 0.0334075,
0.538228, 0.0300882,
0.559262, 0.0269154,
0.569004, 0.0245737,
0.796409, 0.0058683,
0.604272, 0.020474,
0.635222, 0.0184656,
0.451173, 0.0437385,
0.45981, 0.0438979,
0.469364, 0.0440743,
0.479787, 0.0430757,
0.489781, 0.0405594,
0.499081, 0.0372164,
0.519197, 0.0333292,
0.538602, 0.0299073,
0.55939, 0.0269427,
0.569233, 0.0245426,
0.79632, 0.0058696,
0.604087, 0.0205823,
0.634936, 0.0184471,
0.512348, 0.0393896,
0.520738, 0.0397311,
0.529037, 0.0398933,
0.538312, 0.0392194,
0.548357, 0.0366568,
0.558417, 0.0337581,
0.567866, 0.0304272,
0.586203, 0.0270835,
0.606012, 0.024013,
0.614632, 0.0218297,
0.624016, 0.0198086,
0.662405, 0.0165656,
0.483998, 0.0416654,
0.493231, 0.0420079,
0.502206, 0.0420746,
0.512464, 0.0412883,
0.523073, 0.0384667,
0.533974, 0.0354978,
0.544117, 0.0317698,
0.564156, 0.0281446,
0.585064, 0.0249821,
0.594399, 0.0225772,
0.604461, 0.0204055,
0.820985, 0.0055951,
0.644812, 0.0170639,
0.484258, 0.0417167,
0.493543, 0.0419987,
0.502144, 0.0421289,
0.51244, 0.0412184,
0.522887, 0.038665,
0.534135, 0.0353631,
0.544653, 0.0317477,
0.564064, 0.0281256,
0.585007, 0.0248994,
0.594341, 0.0225863,
0.603976, 0.0204724,
0.821301, 0.0055473,
0.644707, 0.0170236,
0.484239, 0.0418055,
0.493508, 0.0418557,
0.502369, 0.0420011,
0.512827, 0.0412362,
0.522994, 0.038501,
0.534378, 0.0354152,
0.544566, 0.0317336,
0.564188, 0.0280482,
0.584822, 0.0249044,
0.594483, 0.0225687,
0.604241, 0.0204012,
0.821181, 0.0055513,
0.644643, 0.0169939,
0.555196, 0.0372831,
0.563195, 0.0377669,
0.57121, 0.0378758,
0.580675, 0.0372195,
0.581721, 0.0346251,
0.593883, 0.0320143,
0.605068, 0.028737,
0.615019, 0.0254946,
0.634745, 0.0222284,
0.643906, 0.0198744,
0.6533, 0.0178904,
0.662009, 0.0164787,
0.529532, 0.0395984,
0.538803, 0.0397681,
0.547222, 0.039997,
0.557402, 0.0391735,
0.558732, 0.0362604,
0.571798, 0.0333341,
0.583412, 0.0299896,
0.594391, 0.0265381,
0.615525, 0.0230327,
0.625238, 0.0205358,
0.635016, 0.0185179,
0.644689, 0.016994,
0.849202, 0.0054302,
0.529117, 0.0396394,
0.538389, 0.039823,
0.547348, 0.0400974,
0.557662, 0.0389979,
0.558744, 0.0361291,
0.571692, 0.0333511,
0.583531, 0.0300404,
0.59464, 0.0264603,
0.615819, 0.0230848,
0.625436, 0.0205038,
0.634884, 0.0185094,
0.644505, 0.0170133,
0.849211, 0.005477,
0.529489, 0.0396005,
0.538489, 0.0397259,
0.547147, 0.040036,
0.557398, 0.0391778,
0.558885, 0.0362555,
0.571675, 0.0334693,
0.583757, 0.0300068,
0.594479, 0.0263979,
0.615672, 0.0230696,
0.62528, 0.0205757,
0.634846, 0.0184285,
0.644879, 0.0170018,
0.849345, 0.0054235,
0.493983, 0.0190293,
0.292519, 0.0612272,
0.301233, 0.0615896,
0.312018, 0.0618284,
0.310715, 0.059906,
0.317138, 0.057448,
0.340827, 0.0547613,
0.365226, 0.0516845,
0.392539, 0.048622,
0.42052, 0.045965,
0.451178, 0.0437853,
0.484478, 0.0417795,
0.529414, 0.0396878,
0.331118, 0.0578,
0.3392, 0.0583863,
0.3493, 0.0584268,
0.348402, 0.05668,
0.354466, 0.0543199,
0.376847, 0.0518831,
0.399989, 0.0489322,
0.425466, 0.0460422,
0.452039, 0.0433423,
0.480972, 0.0413423,
0.512652, 0.0393816,
0.555183, 0.0374887,
0.494329, 0.0189735,
0.292511, 0.0613453,
0.301148, 0.0616213,
0.311992, 0.0620004,
0.310998, 0.059962,
0.316931, 0.0575207,
0.340962, 0.0547617,
0.3652, 0.0518299,
0.392527, 0.0484895,
0.420493, 0.0460615,
0.451093, 0.0436327,
0.484068, 0.0416492,
0.529621, 0.0396714,
0.493943, 0.0189695,
0.292262, 0.0613033,
0.301194, 0.0616747,
0.311947, 0.0618276,
0.310975, 0.0598633,
0.316787, 0.0574962,
0.341021, 0.0548599,
0.365355, 0.0516913,
0.3925, 0.0486245,
0.420718, 0.0460766,
0.451283, 0.0436961,
0.48418, 0.0417026,
0.529449, 0.0395657,
0.292296, 0.0613128,
0.528466, 0.0170709,
0.320703, 0.0615176,
0.331636, 0.062034,
0.330618, 0.0600651,
0.33738, 0.0577117,
0.347463, 0.0547815,
0.374185, 0.0517526,
0.401711, 0.0489203,
0.429773, 0.0462265,
0.460115, 0.0439725,
0.493231, 0.0419945,
0.538619, 0.0398215,
0.331095, 0.0578548,
0.3575, 0.05829,
0.367733, 0.0587098,
0.366979, 0.05683,
0.373143, 0.0545789,
0.38296, 0.0518685,
0.408224, 0.0490957,
0.433964, 0.0462274,
0.460463, 0.0437525,
0.489422, 0.0416107,
0.520679, 0.0396829,
0.563253, 0.0376226,
0.292397, 0.0612194,
0.528405, 0.0170537,
0.320823, 0.0616959,
0.331544, 0.0618329,
0.330532, 0.0601498,
0.337045, 0.0576853,
0.347494, 0.0545348,
0.374147, 0.0519683,
0.401557, 0.0488185,
0.429355, 0.0462404,
0.460065, 0.0439512,
0.493289, 0.0417834,
0.53836, 0.0397082,
0.292437, 0.0613337,
0.528557, 0.0171499,
0.320621, 0.0616434,
0.331585, 0.0619132,
0.330849, 0.0602287,
0.337304, 0.0576805,
0.347267, 0.0546656,
0.374155, 0.0518932,
0.401351, 0.0488646,
0.429565, 0.046082,
0.459953, 0.0439407,
0.493461, 0.0419178,
0.538425, 0.0398992,
0.301104, 0.0616609,
0.320449, 0.061544,
0.562387, 0.015289,
0.350574, 0.0616404,
0.349644, 0.0602313,
0.356624, 0.0578078,
0.367003, 0.0547182,
0.381003, 0.0515138,
0.410705, 0.0489923,
0.438673, 0.0463533,
0.469348, 0.0440752,
0.502372, 0.0419943,
0.547069, 0.0400426,
0.339309, 0.0582629,
0.357505, 0.0583304,
0.385215, 0.058362,
0.384723, 0.057048,
0.391244, 0.0547097,
0.400976, 0.0519929,
0.414168, 0.0490454,
0.442077, 0.046444,
0.468521, 0.0439715,
0.497298, 0.041926,
0.529126, 0.0399512,
0.571002, 0.0378924,
0.30127, 0.0617143,
0.320665, 0.0616686,
0.562516, 0.0153857,
0.350548, 0.0615918,
0.350101, 0.0601615,
0.35639, 0.057844,
0.367131, 0.054723,
0.380913, 0.0518429,
0.410501, 0.0489852,
0.438543, 0.0463424,
0.469241, 0.0440881,
0.502142, 0.0419727,
0.547204, 0.0398937,
0.301291, 0.0616454,
0.320648, 0.0616317,
0.562421, 0.0153506,
0.351014, 0.0617337,
0.350052, 0.0601314,
0.356722, 0.057781,
0.366855, 0.0547073,
0.381153, 0.0517152,
0.410412, 0.0489696,
0.438568, 0.0463859,
0.469065, 0.0440584,
0.5023, 0.0421507,
0.547435, 0.0399373,
0.312179, 0.0617577,
0.331681, 0.0620847,
0.350725, 0.0615572,
0.596344, 0.0137201,
0.370182, 0.058646,
0.376907, 0.0567132,
0.387501, 0.0537319,
0.401362, 0.0506881,
0.418787, 0.0478891,
0.448802, 0.0456393,
0.479829, 0.0431307,
0.512727, 0.041193,
0.557569, 0.0390406,
0.349398, 0.0584312,
0.367854, 0.0585654,
0.385415, 0.0584118,
0.403275, 0.0555906,
0.40989, 0.0539084,
0.419834, 0.051114,
0.432925, 0.0482827,
0.449168, 0.0455969,
0.478288, 0.0432524,
0.50716, 0.0410707,
0.53834, 0.0392765,
0.580628, 0.0372666,
0.311923, 0.0618164,
0.331847, 0.0620138,
0.350604, 0.0616042,
0.596353, 0.0137219,
0.370184, 0.0585724,
0.376988, 0.0568675,
0.387352, 0.0538255,
0.401252, 0.0506724,
0.41888, 0.0478091,
0.448804, 0.0455089,
0.479499, 0.043264,
0.512555, 0.0412129,
0.557369, 0.039189,
0.311954, 0.0618699,
0.331821, 0.0619895,
0.350515, 0.0616725,
0.596499, 0.013724,
0.370289, 0.0586428,
0.376774, 0.0568228,
0.387486, 0.05375,
0.401385, 0.0507187,
0.418791, 0.0479413,
0.449094, 0.0455942,
0.479507, 0.0432057,
0.51272, 0.0412323,
0.557401, 0.0390912,
0.310755, 0.0599929,
0.330629, 0.0601203,
0.350105, 0.0602083,
0.370219, 0.0586936,
0.627067, 0.0116546,
0.396399, 0.0532742,
0.406976, 0.0509724,
0.420935, 0.0477279,
0.438415, 0.0448927,
0.457165, 0.0426769,
0.489988, 0.0406919,
0.523199, 0.0384515,
0.558643, 0.0362902,
0.3485, 0.056612,
0.366626, 0.0569442,
0.384974, 0.05699,
0.403626, 0.0557144,
0.428399, 0.0508394,
0.438192, 0.0484945,
0.451453, 0.0455957,
0.467732, 0.0429375,
0.485623, 0.0405662,
0.516961, 0.0387101,
0.547851, 0.0366584,
0.581827, 0.0345618,
0.310809, 0.0599166,
0.330796, 0.0601525,
0.350028, 0.0601274,
0.370054, 0.0586147,
0.626974, 0.0116482,
0.396551, 0.0534071,
0.406964, 0.0509607,
0.421204, 0.047732,
0.438261, 0.0447777,
0.456978, 0.0425577,
0.489833, 0.0406151,
0.523184, 0.0384995,
0.558946, 0.0362644,
0.310825, 0.0600474,
0.330655, 0.0601799,
0.349845, 0.0600245,
0.369979, 0.0587185,
0.626859, 0.0116727,
0.396425, 0.0532758,
0.406777, 0.0508441,
0.420964, 0.047899,
0.438294, 0.0448334,
0.457077, 0.0426777,
0.48987, 0.0405938,
0.52305, 0.0385059,
0.558818, 0.0361056,
0.316954, 0.0574702,
0.33708, 0.0577441,
0.356796, 0.0579754,
0.376652, 0.0567708,
0.396682, 0.0533891,
0.657465, 0.0102474,
0.42706, 0.0472104,
0.440727, 0.0445314,
0.458162, 0.0415737,
0.477324, 0.0390968,
0.499088, 0.0372654,
0.534142, 0.0354016,
0.571789, 0.0334582,
0.354334, 0.0542676,
0.373198, 0.0547355,
0.391161, 0.0548905,
0.409848, 0.0540246,
0.428191, 0.0508585,
0.456623, 0.0451046,
0.470205, 0.0425785,
0.48652, 0.0397032,
0.504944, 0.0373908,
0.525043, 0.0354805,
0.558365, 0.0338178,
0.593928, 0.0319726,
0.317136, 0.0574238,
0.3372, 0.0577121,
0.356689, 0.057786,
0.376875, 0.0567309,
0.39644, 0.0534516,
0.657076, 0.0102308,
0.426955, 0.0471804,
0.440748, 0.0444986,
0.458342, 0.0415223,
0.477366, 0.039072,
0.499031, 0.0371915,
0.534276, 0.0354037,
0.57159, 0.0335086,
0.317199, 0.0575244,
0.337099, 0.057833,
0.35659, 0.0576666,
0.376639, 0.0567324,
0.396475, 0.053416,
0.657093, 0.0102459,
0.426929, 0.0472074,
0.440927, 0.0445828,
0.457962, 0.0416309,
0.477393, 0.0390587,
0.499187, 0.0371567,
0.534246, 0.0354604,
0.571708, 0.033398,
0.340761, 0.0547659,
0.347545, 0.0546484,
0.366975, 0.0547462,
0.38747, 0.0537689,
0.407131, 0.0508527,
0.426828, 0.0471784,
0.687482, 0.0089078,
0.460579, 0.0406134,
0.478076, 0.0380593,
0.497406, 0.0355256,
0.519558, 0.0333364,
0.544513, 0.0318227,
0.583665, 0.0299913,
0.377138, 0.0517718,
0.38287, 0.0519029,
0.401174, 0.0518533,
0.420244, 0.0510556,
0.438491, 0.0484618,
0.456926, 0.0449773,
0.488802, 0.0388971,
0.504925, 0.0365602,
0.522975, 0.0340867,
0.544233, 0.0319961,
0.568192, 0.0304311,
0.604925, 0.0287084,
0.340901, 0.054824,
0.347556, 0.0547805,
0.367048, 0.0548091,
0.387348, 0.053866,
0.406884, 0.050887,
0.42682, 0.0471586,
0.687305, 0.0088667,
0.460787, 0.0406119,
0.478035, 0.0380773,
0.49682, 0.0355305,
0.51919, 0.0334177,
0.544589, 0.0318337,
0.583841, 0.0299688,
0.341029, 0.0549548,
0.347478, 0.0547733,
0.366959, 0.0547595,
0.387302, 0.0538903,
0.406882, 0.0508062,
0.426648, 0.0471285,
0.687096, 0.0089383,
0.460743, 0.0405925,
0.477959, 0.0380828,
0.497315, 0.0356533,
0.519115, 0.0333891,
0.544406, 0.0317904,
0.58375, 0.0299319,
0.365112, 0.0517324,
0.374303, 0.0518282,
0.380534, 0.0517784,
0.40123, 0.0506943,
0.420923, 0.0478726,
0.441119, 0.0445093,
0.460508, 0.0406533,
0.716765, 0.0078167,
0.498087, 0.0342728,
0.516216, 0.0322699,
0.538662, 0.0299321,
0.564233, 0.0280905,
0.594602, 0.0264205,
0.399929, 0.0489179,
0.40794, 0.049169,
0.41397, 0.0491106,
0.433476, 0.0481708,
0.451576, 0.0455665,
0.469744, 0.0426492,
0.488655, 0.0388815,
0.523976, 0.0329944,
0.541363, 0.0309678,
0.56251, 0.0288333,
0.586138, 0.02713,
0.6153, 0.0254013,
0.365215, 0.0517195,
0.374593, 0.0517797,
0.380966, 0.0517567,
0.401326, 0.0507063,
0.421285, 0.0476558,
0.440729, 0.0445725,
0.460948, 0.0405788,
0.716813, 0.0078456,
0.498471, 0.0343006,
0.516752, 0.0322512,
0.538968, 0.0299565,
0.564031, 0.0281028,
0.594572, 0.0264969,
0.365182, 0.0516711,
0.374362, 0.051898,
0.380896, 0.0518157,
0.401341, 0.0506674,
0.421001, 0.0477295,
0.44091, 0.0446471,
0.460554, 0.0406255,
0.71678, 0.0078103,
0.498301, 0.0343498,
0.516606, 0.0322181,
0.538648, 0.0299636,
0.564173, 0.0280629,
0.594785, 0.0264082,
0.392298, 0.0484829,
0.401531, 0.0487807,
0.4106, 0.0490177,
0.418592, 0.0478338,
0.438174, 0.0448401,
0.458126, 0.0415642,
0.477794, 0.0381274,
0.498165, 0.0343325,
0.746788, 0.007043,
0.53812, 0.0284483,
0.559455, 0.0269184,
0.585379, 0.0249289,
0.615462, 0.0230556,
0.425494, 0.0460435,
0.433796, 0.0463754,
0.442209, 0.0464711,
0.449357, 0.0454881,
0.467776, 0.0427001,
0.486341, 0.039749,
0.505063, 0.0364977,
0.523875, 0.0329487,
0.561746, 0.0274374,
0.581749, 0.0259454,
0.605809, 0.0240573,
0.634523, 0.0222724,
0.392566, 0.0486471,
0.40146, 0.0488872,
0.410565, 0.049066,
0.418693, 0.0478274,
0.438474, 0.0447742,
0.458429, 0.0415955,
0.478086, 0.0380967,
0.49819, 0.0343406,
0.746396, 0.0070485,
0.538149, 0.0284336,
0.559464, 0.026941,
0.58501, 0.0248336,
0.615828, 0.0230706,
0.392458, 0.0484853,
0.401754, 0.0487542,
0.410677, 0.0488944,
0.418623, 0.0478822,
0.438732, 0.0448486,
0.458288, 0.0415919,
0.477963, 0.0381386,
0.498207, 0.0342965,
0.746497, 0.0070127,
0.538312, 0.028549,
0.559072, 0.0269031,
0.58471, 0.0249301,
0.615668, 0.0231026,
0.420575, 0.0459578,
0.429735, 0.0461333,
0.438572, 0.0464313,
0.448876, 0.0455181,
0.457117, 0.0426565,
0.477041, 0.0391785,
0.497001, 0.0355393,
0.516284, 0.0323375,
0.53844, 0.028433,
0.771359, 0.0063403,
0.568972, 0.0244491,
0.594145, 0.0225946,
0.62514, 0.0205516,
0.451898, 0.0435848,
0.460495, 0.0438277,
0.468497, 0.0440446,
0.478454, 0.0432986,
0.48553, 0.0405896,
0.504634, 0.0373027,
0.523066, 0.0339577,
0.54109, 0.0310759,
0.561379, 0.0275082,
0.590821, 0.0237046,
0.61461, 0.0219043,
0.64394, 0.0198793,
0.420751, 0.045894,
0.429812, 0.0462072,
0.438811, 0.0462099,
0.448908, 0.04552,
0.457051, 0.0427593,
0.477326, 0.0391263,
0.497323, 0.0355236,
0.516447, 0.0322608,
0.538374, 0.0285262,
0.771352, 0.0063486,
0.568779, 0.0245446,
0.59416, 0.0225442,
0.625413, 0.0205216,
0.420621, 0.0459238,
0.429467, 0.0461465,
0.438725, 0.0463644,
0.448986, 0.045613,
0.457062, 0.0425443,
0.477062, 0.0390549,
0.497052, 0.0355052,
0.516098, 0.0323275,
0.53847, 0.02847,
0.771316, 0.0063282,
0.569294, 0.0244865,
0.594166, 0.0225577,
0.625305, 0.0206188,
0.451061, 0.0436966,
0.460309, 0.0439493,
0.46925, 0.044175,
0.479391, 0.0431982,
0.489767, 0.0405367,
0.499014, 0.0372938,
0.519332, 0.0333541,
0.538533, 0.0299637,
0.5592, 0.0268117,
0.568943, 0.0246206,
0.796263, 0.0058627,
0.604388, 0.0204252,
0.635074, 0.0184858,
0.481116, 0.0413318,
0.489183, 0.0416582,
0.497312, 0.0418328,
0.507049, 0.0411438,
0.516602, 0.0387492,
0.525258, 0.035673,
0.544208, 0.0319934,
0.562301, 0.0288695,
0.581454, 0.0259578,
0.590663, 0.0237107,
0.623874, 0.01988,
0.652959, 0.0179506,
0.451008, 0.043728,
0.460409, 0.043812,
0.469473, 0.0441146,
0.479296, 0.0431954,
0.490278, 0.0405908,
0.499155, 0.037187,
0.519442, 0.0333323,
0.538674, 0.0299003,
0.559271, 0.0268293,
0.569003, 0.0245244,
0.796183, 0.0058517,
0.604363, 0.0204159,
0.635079, 0.0184531,
0.451144, 0.0436516,
0.460194, 0.0439326,
0.468983, 0.0440588,
0.479826, 0.0432043,
0.489918, 0.0406281,
0.49885, 0.0372593,
0.51946, 0.0334408,
0.538574, 0.0299017,
0.559257, 0.0269004,
0.568969, 0.0245927,
0.796513, 0.0058557,
0.6045, 0.0204139,
0.634805, 0.0184432,
0.483983, 0.0418543,
0.493301, 0.0418831,
0.502243, 0.0420962,
0.512898, 0.0412631,
0.522863, 0.0386031,
0.534141, 0.0353702,
0.544253, 0.0318015,
0.564364, 0.0281267,
0.584865, 0.0248615,
0.594689, 0.0226208,
0.604616, 0.0204848,
0.820949, 0.0056066,
0.644863, 0.0169391,
0.51247, 0.0393968,
0.520631, 0.0397527,
0.529138, 0.0399635,
0.538616, 0.0392984,
0.548134, 0.0367917,
0.558474, 0.0337882,
0.567857, 0.0304445,
0.586472, 0.0269848,
0.605875, 0.0240533,
0.614828, 0.0218016,
0.623955, 0.0198039,
0.662292, 0.016481,
0.484446, 0.0416959,
0.493383, 0.0417975,
0.502262, 0.0421317,
0.512447, 0.041147,
0.52311, 0.0384842,
0.534372, 0.0353866,
0.544343, 0.0318124,
0.563874, 0.0282007,
0.585165, 0.0249254,
0.594501, 0.0225605,
0.60424, 0.0204448,
0.821221, 0.0055829,
0.644559, 0.0170995,
0.484679, 0.0416299,
0.493503, 0.0419627,
0.502193, 0.0420582,
0.512491, 0.0412337,
0.522991, 0.0386236,
0.534338, 0.0355311,
0.544174, 0.0318349,
0.563901, 0.0281326,
0.585176, 0.0249119,
0.594625, 0.0225176,
0.604003, 0.0204821,
0.821036, 0.0055763,
0.644588, 0.0169825,
0.52954, 0.0396385,
0.538524, 0.0397984,
0.547482, 0.0399104,
0.557426, 0.0390261,
0.558521, 0.0363095,
0.571894, 0.0334968,
0.584014, 0.0298344,
0.594402, 0.0264743,
0.615503, 0.0231394,
0.625303, 0.0205601,
0.635033, 0.0184241,
0.644425, 0.0170698,
0.849376, 0.0054233,
0.555222, 0.0375728,
0.563671, 0.0376671,
0.571466, 0.0378057,
0.580714, 0.037152,
0.581733, 0.0345692,
0.593818, 0.0319958,
0.605142, 0.0287657,
0.615059, 0.0254681,
0.634609, 0.0222989,
0.643914, 0.0198778,
0.652719, 0.017926,
0.662433, 0.0164726,
0.529197, 0.0396199,
0.538833, 0.0397497,
0.547074, 0.0399849,
0.55753, 0.039103,
0.558503, 0.036191,
0.571568, 0.0334328,
0.583525, 0.0299637,
0.594554, 0.0264367,
0.615672, 0.0231297,
0.625199, 0.0205232,
0.634823, 0.0184651,
0.644588, 0.0170603,
0.849088, 0.0054969,
0.529338, 0.0396229,
0.538775, 0.0397256,
0.547212, 0.0399563,
0.557349, 0.0390466,
0.55886, 0.0361286,
0.571768, 0.0334304,
0.583797, 0.0299654,
0.594568, 0.0264776,
0.61571, 0.0230286,
0.625379, 0.0205969,
0.63508, 0.0185375,
0.644679, 0.0170002,
0.849238, 0.0054634,
0.493925, 0.0188294,
0.292452, 0.0612288,
0.301481, 0.0614929,
0.312022, 0.0617865,
0.310831, 0.0599422,
0.317085, 0.0575176,
0.340702, 0.0547815,
0.365548, 0.0515841,
0.392612, 0.0485299,
0.420547, 0.0459817,
0.451091, 0.0436785,
0.484436, 0.0417263,
0.529494, 0.0396353,
0.493903, 0.0189749,
0.292409, 0.0612693,
0.301285, 0.0615318,
0.312153, 0.0619021,
0.310953, 0.059694,
0.31686, 0.057523,
0.341061, 0.0548598,
0.365336, 0.0516291,
0.392398, 0.0486094,
0.420473, 0.0459409,
0.451093, 0.0437413,
0.484614, 0.0418355,
0.529312, 0.0396476,
0.331013, 0.0579079,
0.339281, 0.0583643,
0.349505, 0.0583916,
0.348572, 0.0565881,
0.354352, 0.0544116,
0.376877, 0.0519975,
0.399824, 0.0488744,
0.425424, 0.0458877,
0.452001, 0.0434717,
0.481011, 0.0414045,
0.512384, 0.0394331,
0.555099, 0.0374694,
0.493926, 0.0189799,
0.292487, 0.0613639,
0.301167, 0.061648,
0.31213, 0.0618619,
0.310829, 0.0599134,
0.317104, 0.0574707,
0.34081, 0.0548169,
0.365184, 0.0516611,
0.392475, 0.0486182,
0.420633, 0.0459104,
0.451072, 0.0437038,
0.484226, 0.0417976,
0.529729, 0.0395781,
0.292401, 0.0612627,
0.528403, 0.0171344,
0.320448, 0.0616915,
0.331821, 0.0620405,
0.330632, 0.0601533,
0.337185, 0.0577342,
0.347675, 0.0545826,
0.374182, 0.0518727,
0.401362, 0.0487277,
0.429799, 0.0461828,
0.460272, 0.0438778,
0.493497, 0.0420158,
0.538609, 0.0397167,
0.292434, 0.0612772,
0.528363, 0.0171426,
0.320794, 0.061589,
0.331497, 0.0621537,
0.330791, 0.0601924,
0.337399, 0.0575117,
0.347445, 0.054631,
0.374434, 0.051842,
0.401598, 0.0486762,
0.429779, 0.0461197,
0.460396, 0.043839,
0.493339, 0.0418783,
0.538563, 0.039797,
0.331292, 0.0579891,
0.357339, 0.0583729,
0.367554, 0.0586654,
0.366653, 0.0569578,
0.373228, 0.0548007,
0.382883, 0.0517939,
0.408076, 0.0491599,
0.433899, 0.0462235,
0.460401, 0.0439369,
0.489389, 0.0416834,
0.520672, 0.0396552,
0.563621, 0.0377665,
0.292373, 0.0612938,
0.528398, 0.0170516,
0.320567, 0.0616818,
0.331728, 0.0619957,
0.330685, 0.0601452,
0.337377, 0.0576733,
0.347455, 0.0547294,
0.374239, 0.0518868,
0.401686, 0.0486643,
0.429759, 0.046182,
0.460156, 0.0440116,
0.493331, 0.0419453,
0.538752, 0.0397701,
0.300974, 0.0617398,
0.320625, 0.0615323,
0.562869, 0.0152675,
0.350841, 0.0616069,
0.350026, 0.059998,
0.35671, 0.0576705,
0.366844, 0.0548193,
0.380799, 0.0516526,
0.410415, 0.0489128,
0.438581, 0.0464017,
0.469301, 0.0441508,
0.502225, 0.042085,
0.547164, 0.0399056,
0.301444, 0.0616303,
0.320663, 0.0616584,
0.562461, 0.0153081,
0.350695, 0.06158,
0.350038, 0.0601624,
0.356763, 0.0576622,
0.366874, 0.0547664,
0.381089, 0.0517495,
0.410612, 0.0489168,
0.438547, 0.0464198,
0.469461, 0.0440803,
0.502582, 0.0420952,
0.547514, 0.0398336,
0.339317, 0.0581909,
0.357452, 0.058322,
0.385325, 0.0582977,
0.3849, 0.0570025,
0.391265, 0.0547063,
0.401218, 0.0520531,
0.414153, 0.0490965,
0.442077, 0.0464294,
0.468866, 0.044,
0.497596, 0.0418431,
0.52887, 0.0399074,
0.571683, 0.0377627,
0.3011, 0.0616095,
0.320743, 0.0616201,
0.562458, 0.015368,
0.350891, 0.061632,
0.35016, 0.060182,
0.356707, 0.0578261,
0.366942, 0.0547232,
0.380748, 0.0518511,
0.410578, 0.0487934,
0.438652, 0.0464191,
0.469201, 0.0440056,
0.50245, 0.0419674,
0.547286, 0.0398574,
0.312111, 0.0617732,
0.331621, 0.0620143,
0.35083, 0.0616453,
0.596661, 0.0136628,
0.370281, 0.0585878,
0.376632, 0.0566163,
0.387352, 0.053861,
0.401511, 0.0506573,
0.418606, 0.0478473,
0.449094, 0.0456242,
0.479554, 0.0432627,
0.512298, 0.041258,
0.557133, 0.0390562,
0.312024, 0.0618061,
0.331454, 0.0620087,
0.350886, 0.0615779,
0.596781, 0.0135983,
0.370058, 0.0587089,
0.376765, 0.0567778,
0.387272, 0.0538016,
0.40144, 0.0507101,
0.418678, 0.0479008,
0.449267, 0.0453925,
0.479685, 0.0431396,
0.51255, 0.0412098,
0.557434, 0.0391225,
0.349146, 0.058532,
0.36746, 0.0588446,
0.385367, 0.058417,
0.403412, 0.0556962,
0.409683, 0.0539227,
0.419755, 0.0511693,
0.432788, 0.0482877,
0.44945, 0.0455834,
0.478085, 0.0433535,
0.507017, 0.0409769,
0.538456, 0.0391492,
0.580691, 0.0372009,
0.31212, 0.0618546,
0.331479, 0.0620512,
0.350906, 0.061598,
0.596642, 0.0136431,
0.370351, 0.0586826,
0.37657, 0.0567637,
0.387211, 0.0537166,
0.40146, 0.0507737,
0.418663, 0.0478978,
0.449059, 0.0455347,
0.47978, 0.0431631,
0.512511, 0.0412967,
0.557372, 0.0391029,
0.310796, 0.0599866,
0.330713, 0.0600961,
0.350141, 0.060066,
0.369915, 0.0587552,
0.626695, 0.0116951,
0.396258, 0.0533672,
0.406929, 0.0508452,
0.420998, 0.0478261,
0.438363, 0.0447737,
0.457297, 0.0426807,
0.490125, 0.040545,
0.522886, 0.0385394,
0.558662, 0.0362241,
0.310922, 0.0598786,
0.330547, 0.0603558,
0.350274, 0.0602424,
0.369985, 0.0586473,
0.626857, 0.011745,
0.396741, 0.0533842,
0.407014, 0.0508089,
0.420909, 0.0479516,
0.43838, 0.0449067,
0.457364, 0.0425815,
0.489946, 0.0405043,
0.523022, 0.0385713,
0.558407, 0.036212,
0.34854, 0.0566812,
0.367015, 0.0569986,
0.384708, 0.0571321,
0.403675, 0.0556851,
0.428257, 0.0508709,
0.438288, 0.0484894,
0.451511, 0.0456623,
0.468029, 0.0427976,
0.485907, 0.0407002,
0.516993, 0.038721,
0.547948, 0.0367987,
0.581555, 0.0345689,
0.311023, 0.0598689,
0.33065, 0.0602687,
0.349699, 0.060143,
0.370298, 0.0585327,
0.626928, 0.0116669,
0.396645, 0.0534152,
0.406902, 0.0509149,
0.421257, 0.0479651,
0.438671, 0.0448945,
0.457167, 0.042588,
0.489913, 0.0405069,
0.522684, 0.0385625,
0.558513, 0.0363128,
0.317012, 0.0575352,
0.337033, 0.0576271,
0.356597, 0.0577711,
0.376804, 0.0566233,
0.396725, 0.0534235,
0.657487, 0.0102593,
0.426848, 0.0472451,
0.440812, 0.0445492,
0.458217, 0.0415394,
0.477437, 0.0391615,
0.498972, 0.037251,
0.534158, 0.0353966,
0.571704, 0.0334928,
0.31726, 0.0574118,
0.337246, 0.0577223,
0.356715, 0.0577607,
0.376822, 0.0567882,
0.39638, 0.0534135,
0.657531, 0.0101993,
0.426901, 0.047184,
0.440798, 0.044444,
0.458378, 0.0414662,
0.477554, 0.0392423,
0.499094, 0.0371512,
0.534205, 0.0353769,
0.571665, 0.0334126,
0.354739, 0.0544093,
0.372962, 0.0545953,
0.390986, 0.054902,
0.409701, 0.0538413,
0.428342, 0.050987,
0.457066, 0.0450254,
0.469638, 0.0426488,
0.486442, 0.0398506,
0.504152, 0.0373936,
0.524795, 0.0355918,
0.558328, 0.033894,
0.593832, 0.0320118,
0.316929, 0.0575193,
0.33722, 0.0576602,
0.356463, 0.0577128,
0.376903, 0.0565989,
0.396487, 0.0534085,
0.657228, 0.0102325,
0.426792, 0.0472243,
0.440343, 0.0446068,
0.458477, 0.0415644,
0.477225, 0.0391273,
0.498961, 0.03727,
0.534509, 0.0353701,
0.571955, 0.0333893,
0.340782, 0.0549269,
0.347262, 0.0547434,
0.367177, 0.0547654,
0.387362, 0.0537947,
0.407066, 0.0508072,
0.426997, 0.0472796,
0.687239, 0.0089085,
0.460605, 0.0406214,
0.478304, 0.037995,
0.497267, 0.0355458,
0.519055, 0.0332995,
0.544133, 0.0317519,
0.583829, 0.0299684,
0.341107, 0.0547304,
0.347735, 0.0547109,
0.367187, 0.0546969,
0.387226, 0.0537388,
0.40717, 0.0509331,
0.426647, 0.0472303,
0.687092, 0.0089034,
0.460853, 0.0406615,
0.478305, 0.0380434,
0.497058, 0.0354087,
0.519458, 0.0333218,
0.544157, 0.0317623,
0.583753, 0.0298849,
0.376778, 0.051821,
0.383078, 0.0517966,
0.400814, 0.0520032,
0.420055, 0.0511224,
0.438219, 0.0485048,
0.456672, 0.0451158,
0.488434, 0.038939,
0.505189, 0.0366145,
0.523026, 0.0340593,
0.544055, 0.0320236,
0.567913, 0.0303858,
0.604859, 0.0287276,
0.341125, 0.0548977,
0.347445, 0.0546298,
0.367267, 0.0547761,
0.38741, 0.0536613,
0.407199, 0.0508183,
0.42704, 0.0471488,
0.687301, 0.0089217,
0.460801, 0.0405269,
0.478327, 0.0381487,
0.496755, 0.0354881,
0.519337, 0.0334891,
0.544354, 0.0317481,
0.583507, 0.0299663,
0.365256, 0.051626,
0.374266, 0.0519765,
0.380885, 0.0517207,
0.401309, 0.0506982,
0.42114, 0.04788,
0.440564, 0.0444635,
0.460832, 0.040647,
0.717001, 0.0078032,
0.497934, 0.0342922,
0.516605, 0.0321809,
0.538062, 0.029968,
0.563689, 0.0281999,
0.594425, 0.0263902,
0.365162, 0.0517056,
0.374646, 0.0519287,
0.380733, 0.0518304,
0.401281, 0.0507824,
0.42108, 0.0477119,
0.440967, 0.0445496,
0.460678, 0.0405058,
0.716555, 0.0078492,
0.498009, 0.034298,
0.51666, 0.0322439,
0.538617, 0.0300365,
0.564095, 0.028137,
0.594387, 0.026474,
0.400128, 0.0488686,
0.407971, 0.0492069,
0.414447, 0.0491655,
0.43308, 0.0483346,
0.45184, 0.0455651,
0.469985, 0.0425443,
0.488674, 0.038911,
0.524119, 0.0330066,
0.541139, 0.0310677,
0.562379, 0.0288556,
0.586672, 0.0269197,
0.615147, 0.0254853,
0.365526, 0.0517401,
0.374404, 0.0518554,
0.380804, 0.0516558,
0.40182, 0.0506116,
0.42113, 0.047863,
0.440452, 0.0445336,
0.460564, 0.0406717,
0.716754, 0.0078241,
0.498088, 0.0342677,
0.516687, 0.0322069,
0.538857, 0.0299812,
0.564216, 0.0281265,
0.594328, 0.0264806,
0.392333, 0.0484221,
0.401674, 0.048765,
0.41045, 0.0488331,
0.418893, 0.0479029,
0.438285, 0.0449008,
0.458391, 0.0416951,
0.47827, 0.0380582,
0.498337, 0.0343785,
0.74661, 0.0069849,
0.538001, 0.0284327,
0.559549, 0.0268529,
0.584646, 0.0249596,
0.61542, 0.0229999,
0.392423, 0.0485284,
0.401395, 0.0487838,
0.410635, 0.0489664,
0.418621, 0.047818,
0.438375, 0.0447999,
0.458573, 0.0416432,
0.478334, 0.0381355,
0.498147, 0.0343599,
0.746613, 0.0070038,
0.537833, 0.0285531,
0.559547, 0.0268981,
0.584702, 0.0249556,
0.615587, 0.0230471,
0.425344, 0.0458518,
0.434032, 0.0460991,
0.441929, 0.0465555,
0.449327, 0.0456566,
0.467904, 0.0428509,
0.486365, 0.039724,
0.505128, 0.0365118,
0.523711, 0.0331285,
0.561527, 0.0274711,
0.581803, 0.0259098,
0.605837, 0.0240229,
0.634776, 0.0221951,
0.392531, 0.0485563,
0.401616, 0.0487368,
0.410537, 0.0490037,
0.418499, 0.0478679,
0.438619, 0.0449216,
0.458473, 0.0414935,
0.478249, 0.0380754,
0.498364, 0.0343906,
0.746499, 0.0070454,
0.538467, 0.0284006,
0.559512, 0.0268506,
0.585023, 0.0248904,
0.615638, 0.0230199,
0.420461, 0.0459744,
0.429766, 0.0462599,
0.43864, 0.0462465,
0.449082, 0.0454132,
0.456944, 0.0425873,
0.477353, 0.0391051,
0.497087, 0.0355402,
0.516348, 0.0321736,
0.538273, 0.0284131,
0.771672, 0.006315,
0.569071, 0.0245427,
0.594647, 0.0224796,
0.625167, 0.0206365,
0.42021, 0.0459861,
0.429613, 0.0461844,
0.438873, 0.0463284,
0.448938, 0.0454918,
0.457084, 0.0426935,
0.477152, 0.0392066,
0.497114, 0.035479,
0.51636, 0.0323391,
0.538102, 0.0284513,
0.77146, 0.0063333,
0.569074, 0.0245664,
0.594535, 0.0225067,
0.625323, 0.0205109,
0.451881, 0.0434474,
0.460488, 0.0437702,
0.468755, 0.0441096,
0.478266, 0.0432767,
0.485635, 0.0406708,
0.504307, 0.0374217,
0.523339, 0.0340654,
0.541203, 0.0310206,
0.561421, 0.0274376,
0.590891, 0.0237227,
0.615115, 0.0218365,
0.643657, 0.0199049,
0.420891, 0.0459084,
0.429379, 0.0462751,
0.43872, 0.0462792,
0.449201, 0.0454762,
0.457296, 0.0425935,
0.477349, 0.039089,
0.496999, 0.0354423,
0.51625, 0.032226,
0.538447, 0.0283969,
0.771534, 0.0063385,
0.569284, 0.0245273,
0.594418, 0.022538,
0.625357, 0.0205893,
0.450982, 0.0437476,
0.460218, 0.0439045,
0.469276, 0.0439793,
0.480015, 0.0432077,
0.48994, 0.0405485,
0.499126, 0.0371575,
0.51932, 0.0334304,
0.538722, 0.0300658,
0.559297, 0.0268667,
0.568489, 0.0247103,
0.796509, 0.0058523,
0.604371, 0.0204696,
0.634822, 0.018497,
0.451224, 0.0437681,
0.45992, 0.0439353,
0.469094, 0.0440619,
0.479543, 0.0431999,
0.489746, 0.0405951,
0.499142, 0.0372796,
0.51941, 0.0334996,
0.538523, 0.0298939,
0.559601, 0.0268655,
0.569273, 0.0245731,
0.796563, 0.0058577,
0.60424, 0.0205106,
0.634834, 0.0184621,
0.481024, 0.0412963,
0.489454, 0.0416426,
0.49784, 0.0417795,
0.507227, 0.0410275,
0.516488, 0.0387903,
0.525056, 0.03562,
0.544288, 0.0319857,
0.562357, 0.0288056,
0.581511, 0.0260232,
0.590724, 0.0237588,
0.624076, 0.0198693,
0.65289, 0.0179584,
0.451183, 0.0436809,
0.460445, 0.0439007,
0.469082, 0.0440577,
0.479373, 0.0431609,
0.489814, 0.0405548,
0.499071, 0.0372077,
0.51935, 0.0333562,
0.538742, 0.030074,
0.559184, 0.0268882,
0.569106, 0.0245574,
0.796373, 0.0059074,
0.604596, 0.0204642,
0.634871, 0.0184923,
0.484247, 0.0418467,
0.493268, 0.0418929,
0.502295, 0.0420505,
0.512599, 0.0412387,
0.523316, 0.0385205,
0.534373, 0.0353681,
0.544206, 0.0318347,
0.564118, 0.0280701,
0.584942, 0.0249195,
0.594139, 0.0225465,
0.603989, 0.0204674,
0.820944, 0.0055779,
0.644745, 0.0170362,
0.484347, 0.0416465,
0.493265, 0.0418684,
0.501931, 0.0421024,
0.512507, 0.0411856,
0.522968, 0.038564,
0.534077, 0.0354183,
0.544076, 0.0317561,
0.563994, 0.0280992,
0.584724, 0.0249639,
0.594415, 0.0225837,
0.604563, 0.0204668,
0.821239, 0.0055492,
0.644866, 0.017022,
0.512499, 0.0394683,
0.520684, 0.0396741,
0.528976, 0.0397931,
0.538662, 0.0392095,
0.547893, 0.0367519,
0.558658, 0.0337944,
0.567932, 0.0304651,
0.586216, 0.0269959,
0.605907, 0.0240455,
0.614879, 0.0218229,
0.623836, 0.0199088,
0.662058, 0.0165192,
0.484166, 0.0417747,
0.493077, 0.0419284,
0.502311, 0.0420802,
0.512293, 0.0412341,
0.52302, 0.0384335,
0.534491, 0.0354218,
0.544348, 0.0317958,
0.563866, 0.0280525,
0.585, 0.0249448,
0.594355, 0.0225318,
0.604495, 0.0204368,
0.821292, 0.0055667,
0.644735, 0.0169648,
0.529406, 0.039597,
0.53852, 0.0398509,
0.547395, 0.039993,
0.557497, 0.0391809,
0.558643, 0.0362577,
0.571514, 0.0335608,
0.583565, 0.0299705,
0.594645, 0.0264856,
0.615789, 0.0230416,
0.625298, 0.0205254,
0.634697, 0.0184766,
0.644795, 0.016924,
0.849369, 0.0054257,
0.529645, 0.0395376,
0.538409, 0.039732,
0.546998, 0.0399472,
0.557356, 0.0391372,
0.558545, 0.0362232,
0.572172, 0.0333394,
0.583608, 0.0299916,
0.594182, 0.0264921,
0.616003, 0.0230843,
0.625274, 0.0205939,
0.634705, 0.0185105,
0.644765, 0.0169887,
0.849155, 0.0054506,
0.555128, 0.0375118,
0.563632, 0.0377931,
0.571288, 0.0378674,
0.580636, 0.0371919,
0.581868, 0.0344872,
0.593931, 0.0320499,
0.605111, 0.0286534,
0.615227, 0.02543,
0.634716, 0.0222298,
0.643623, 0.0199016,
0.653029, 0.0178158,
0.66207, 0.0164893,
0.529515, 0.0396942,
0.53857, 0.0397866,
0.54731, 0.0400646,
0.557283, 0.039137,
0.558707, 0.0361781,
0.571659, 0.0334296,
0.583852, 0.0299976,
0.594619, 0.026474,
0.615732, 0.0230825,
0.625457, 0.0205378,
0.635163, 0.0184259,
0.644783, 0.0170812,
0.849194, 0.0054637,
0.493753, 0.0189549,
0.292422, 0.0614152,
0.301106, 0.0616328,
0.31205, 0.0617875,
0.310779, 0.0598805,
0.317278, 0.0574628,
0.341004, 0.0548806,
0.365172, 0.0517093,
0.392596, 0.0485519,
0.420825, 0.0458978,
0.451081, 0.0437416,
0.484596, 0.0417191,
0.52974, 0.0396154,
0.493858, 0.0189522,
0.292558, 0.0613013,
0.301311, 0.0616601,
0.312091, 0.0617443,
0.311036, 0.059852,
0.317, 0.0576533,
0.340971, 0.0548972,
0.365505, 0.0516524,
0.392344, 0.0485649,
0.420435, 0.045953,
0.451087, 0.0436415,
0.484366, 0.0417391,
0.529399, 0.039525,
0.494066, 0.0189485,
0.292751, 0.0612879,
0.301186, 0.0616363,
0.311819, 0.0617098,
0.310859, 0.0599912,
0.3172, 0.057466,
0.34077, 0.0548774,
0.365316, 0.0516145,
0.392646, 0.0485866,
0.420838, 0.0458629,
0.451182, 0.0436487,
0.48425, 0.0416647,
0.529295, 0.0396494,
0.331055, 0.0578806,
0.339168, 0.0581732,
0.34949, 0.0583345,
0.348485, 0.0565992,
0.35406, 0.0543589,
0.376964, 0.0518771,
0.39979, 0.0488887,
0.425517, 0.0460562,
0.452091, 0.0434099,
0.481123, 0.0414034,
0.512428, 0.0394073,
0.554777, 0.0375203,
0.292407, 0.0612385,
0.528571, 0.0170795,
0.320557, 0.0616128,
0.331683, 0.0619926,
0.330868, 0.0602372,
0.337236, 0.0576316,
0.347671, 0.0547959,
0.373969, 0.0517536,
0.401542, 0.0487852,
0.42975, 0.0461093,
0.460482, 0.0436781,
0.493211, 0.0419288,
0.538692, 0.0397122,
0.292405, 0.0612999,
0.528444, 0.0170824,
0.320662, 0.0616893,
0.331498, 0.0620911,
0.330863, 0.0601912,
0.33716, 0.0576515,
0.347465, 0.0546062,
0.37437, 0.0517963,
0.401632, 0.0488705,
0.429677, 0.0462067,
0.459991, 0.0438761,
0.493265, 0.0419627,
0.538452, 0.03981,
0.292431, 0.0612716,
0.528382, 0.0170088,
0.320885, 0.0616869,
0.331716, 0.0618939,
0.330678, 0.0601162,
0.3372, 0.0577184,
0.34733, 0.0546852,
0.374216, 0.0518436,
0.401389, 0.0487268,
0.429746, 0.0461698,
0.460459, 0.0438509,
0.493468, 0.0418638,
0.538425, 0.0397566,
0.331111, 0.0578703,
0.357363, 0.0581427,
0.367377, 0.0585987,
0.366724, 0.0569803,
0.372997, 0.0546794,
0.382728, 0.0518615,
0.408345, 0.0491884,
0.433879, 0.0461948,
0.460459, 0.0437258,
0.489467, 0.0415417,
0.520665, 0.0396546,
0.563135, 0.0376682,
0.301218, 0.0616591,
0.320778, 0.0616966,
0.562581, 0.0153353,
0.350732, 0.0614982,
0.349876, 0.0601358,
0.356438, 0.05786,
0.367214, 0.054644,
0.380761, 0.0516115,
0.410293, 0.0490289,
0.438923, 0.0462166,
0.469488, 0.0439897,
0.502083, 0.042013,
0.54756, 0.0397953,
0.30122, 0.0615644,
0.320487, 0.0617135,
0.562455, 0.0153078,
0.35073, 0.061649,
0.350267, 0.059883,
0.356773, 0.0577289,
0.367272, 0.0547124,
0.380541, 0.0516488,
0.410581, 0.0489619,
0.438538, 0.0463967,
0.469212, 0.0440777,
0.502202, 0.0420377,
0.54729, 0.0399098,
0.301121, 0.0615579,
0.320499, 0.0616915,
0.562668, 0.015312,
0.350793, 0.06156,
0.349874, 0.0601475,
0.356305, 0.0577868,
0.36699, 0.0548121,
0.38091, 0.0518097,
0.410887, 0.0489914,
0.438647, 0.0464558,
0.468929, 0.0439401,
0.502093, 0.0420203,
0.547646, 0.0398539,
0.339195, 0.0582596,
0.357226, 0.058278,
0.385162, 0.0583596,
0.385045, 0.0570308,
0.390932, 0.0548279,
0.401043, 0.0519901,
0.414141, 0.0491099,
0.44201, 0.0464583,
0.468477, 0.0440078,
0.49783, 0.0418124,
0.528963, 0.0399435,
0.571063, 0.0379178,
0.312045, 0.0618355,
0.33177, 0.0620297,
0.350761, 0.0615924,
0.596435, 0.013721,
0.370072, 0.0585726,
0.376651, 0.0568822,
0.387169, 0.0539066,
0.401235, 0.0506171,
0.418455, 0.0479678,
0.449253, 0.0455418,
0.479754, 0.0432744,
0.51255, 0.0412051,
0.557454, 0.0391173,
0.312123, 0.0617633,
0.331907, 0.061875,
0.350854, 0.0616097,
0.596017, 0.0137014,
0.370085, 0.0587005,
0.376847, 0.0568068,
0.387627, 0.0537549,
0.401452, 0.0506918,
0.418466, 0.0479319,
0.449105, 0.0454437,
0.479524, 0.0432135,
0.512406, 0.0411837,
0.55744, 0.0391256,
0.311932, 0.0617434,
0.331844, 0.0620115,
0.350607, 0.0615973,
0.596554, 0.0136932,
0.369836, 0.0586163,
0.376542, 0.056797,
0.387442, 0.053754,
0.401357, 0.0505798,
0.41874, 0.0478488,
0.449079, 0.0455508,
0.479657, 0.0431463,
0.512604, 0.0410827,
0.557425, 0.0391655,
0.349604, 0.0583563,
0.367621, 0.0587924,
0.385401, 0.0583372,
0.403452, 0.0556847,
0.40984, 0.0539354,
0.419618, 0.0511601,
0.433025, 0.0481778,
0.449506, 0.0454287,
0.478325, 0.0433514,
0.507437, 0.0410449,
0.538361, 0.0391954,
0.580496, 0.0371982,
0.310587, 0.0598677,
0.330717, 0.060292,
0.349687, 0.0602019,
0.370254, 0.0586893,
0.6272, 0.0116526,
0.396452, 0.0533245,
0.406925, 0.0508135,
0.421021, 0.0477203,
0.438671, 0.0448011,
0.457012, 0.0426619,
0.489813, 0.0406156,
0.523208, 0.0384745,
0.558912, 0.0362129,
0.311001, 0.0598958,
0.33076, 0.0602508,
0.350005, 0.0601031,
0.370011, 0.0587334,
0.627129, 0.011621,
0.396614, 0.0534851,
0.406914, 0.0508391,
0.420983, 0.047723,
0.438636, 0.0448225,
0.457388, 0.0425302,
0.490106, 0.0405978,
0.52311, 0.0385342,
0.558749, 0.0362351,
0.310841, 0.0598985,
0.330822, 0.060288,
0.350175, 0.0600364,
0.370125, 0.058674,
0.627113, 0.0116725,
0.396674, 0.0534549,
0.407153, 0.0508279,
0.420874, 0.0477959,
0.438632, 0.0448881,
0.456968, 0.0426925,
0.489919, 0.0405285,
0.522915, 0.038543,
0.558561, 0.0363198,
0.348492, 0.0566901,
0.366803, 0.0569459,
0.385, 0.0570828,
0.403551, 0.0556101,
0.428124, 0.0508136,
0.43826, 0.0485504,
0.451645, 0.0455244,
0.467903, 0.0428385,
0.485842, 0.0406045,
0.5166, 0.038694,
0.547949, 0.0367645,
0.581808, 0.0345003,
0.316889, 0.057409,
0.336957, 0.0577208,
0.356223, 0.0577382,
0.376752, 0.0566677,
0.396303, 0.0532932,
0.657101, 0.0101945,
0.426794, 0.047203,
0.440874, 0.0444598,
0.458466, 0.0415595,
0.477266, 0.0391037,
0.499288, 0.037204,
0.534135, 0.0354328,
0.571741, 0.0333918,
0.317253, 0.057509,
0.337144, 0.0578869,
0.356697, 0.0576896,
0.376897, 0.0569033,
0.396245, 0.0533681,
0.657227, 0.0102288,
0.426722, 0.0471,
0.440553, 0.0445995,
0.458314, 0.0415726,
0.477366, 0.0390872,
0.498923, 0.0372509,
0.534088, 0.0354815,
0.572131, 0.03344,
0.317274, 0.0574694,
0.337312, 0.0576635,
0.356461, 0.0577795,
0.376866, 0.0568728,
0.396582, 0.053314,
0.657445, 0.0102121,
0.4272, 0.047084,
0.440526, 0.0445407,
0.45829, 0.041601,
0.477343, 0.0391227,
0.49903, 0.0371032,
0.534003, 0.0354168,
0.571638, 0.0334136,
0.354368, 0.0543606,
0.372986, 0.0545108,
0.390814, 0.0547716,
0.409667, 0.0539338,
0.427959, 0.0508533,
0.456885, 0.0450345,
0.469826, 0.0425152,
0.486532, 0.0396761,
0.504313, 0.0373694,
0.525237, 0.0355609,
0.558143, 0.0337703,
0.593707, 0.0319193,
0.340932, 0.0548095,
0.347535, 0.0547507,
0.367164, 0.0548226,
0.38747, 0.0537125,
0.406877, 0.0508139,
0.426953, 0.0471572,
0.687275, 0.0088901,
0.460712, 0.0405785,
0.477884, 0.0380011,
0.497127, 0.0355403,
0.519122, 0.0333561,
0.54454, 0.0318123,
0.583923, 0.0299965,
0.340913, 0.0548078,
0.347578, 0.0546511,
0.366798, 0.0548435,
0.387295, 0.053643,
0.406796, 0.0507991,
0.426666, 0.0470754,
0.687638, 0.0089081,
0.460984, 0.0405995,
0.478137, 0.0380344,
0.497051, 0.0356399,
0.519421, 0.0334138,
0.544604, 0.0318279,
0.583818, 0.0298841,
0.341101, 0.0547717,
0.34738, 0.0547072,
0.366928, 0.0547832,
0.387459, 0.0538572,
0.406947, 0.0509572,
0.427068, 0.0471026,
0.687166, 0.0089203,
0.46063, 0.0404914,
0.478391, 0.0381018,
0.49748, 0.0355319,
0.519584, 0.0333527,
0.544201, 0.0317741,
0.583766, 0.0300352,
0.377005, 0.0517766,
0.383105, 0.0517576,
0.400947, 0.0519177,
0.420126, 0.0510103,
0.438107, 0.0486214,
0.456811, 0.0450552,
0.488773, 0.0388505,
0.505144, 0.0364106,
0.523056, 0.0341017,
0.544128, 0.0319126,
0.567829, 0.0303888,
0.604916, 0.0286413,
0.364942, 0.05165,
0.374682, 0.0518311,
0.380869, 0.0518688,
0.401442, 0.05067,
0.421043, 0.0477237,
0.44076, 0.0444873,
0.460463, 0.0405704,
0.716557, 0.0078671,
0.498316, 0.0343885,
0.516341, 0.0323205,
0.538625, 0.0299174,
0.564314, 0.0280172,
0.594704, 0.0264867,
0.365394, 0.0516879,
0.374107, 0.0518298,
0.380989, 0.0516628,
0.401227, 0.0507493,
0.421081, 0.0477397,
0.440775, 0.0445812,
0.460706, 0.0406559,
0.716869, 0.0078353,
0.498326, 0.0343132,
0.516232, 0.0323138,
0.538639, 0.0299548,
0.563954, 0.0281232,
0.594292, 0.0265303,
0.365467, 0.0515371,
0.374233, 0.051898,
0.381102, 0.0517451,
0.401248, 0.0506645,
0.421218, 0.0477491,
0.440874, 0.0445453,
0.460421, 0.0406681,
0.716484, 0.0078381,
0.498116, 0.0343697,
0.516409, 0.0322937,
0.538626, 0.0299798,
0.563873, 0.0280948,
0.594679, 0.0263915,
0.399847, 0.0489193,
0.407754, 0.0492379,
0.413863, 0.0492284,
0.433161, 0.048368,
0.451609, 0.045616,
0.469794, 0.0425028,
0.488569, 0.0387984,
0.523992, 0.0330478,
0.541203, 0.0310273,
0.562011, 0.0287881,
0.586419, 0.0269784,
0.615081, 0.0254514,
0.392358, 0.0487241,
0.401496, 0.0487207,
0.410565, 0.0490982,
0.418521, 0.0478898,
0.438631, 0.0448822,
0.458456, 0.041522,
0.478192, 0.0381006,
0.498316, 0.0342569,
0.746564, 0.0070515,
0.538345, 0.0284025,
0.55953, 0.0267726,
0.584606, 0.0248956,
0.61557, 0.0230592,
0.392515, 0.0486506,
0.401337, 0.0488502,
0.410538, 0.0490201,
0.418499, 0.0478971,
0.438632, 0.0448253,
0.458401, 0.0416644,
0.478053, 0.0381037,
0.49855, 0.0342702,
0.746677, 0.0070344,
0.538523, 0.0283455,
0.559289, 0.0269338,
0.585058, 0.0249332,
0.615495, 0.0231502,
0.392495, 0.048463,
0.401662, 0.0487548,
0.410603, 0.0488715,
0.418516, 0.047979,
0.43852, 0.0448861,
0.458346, 0.041515,
0.478143, 0.0380453,
0.498115, 0.0342786,
0.74639, 0.0070282,
0.538546, 0.0284027,
0.559449, 0.0269393,
0.584513, 0.0249889,
0.615851, 0.0230871,
0.425456, 0.0459705,
0.43378, 0.0462781,
0.441972, 0.046491,
0.449468, 0.0455071,
0.467859, 0.0429172,
0.486818, 0.0395449,
0.504808, 0.0365676,
0.523567, 0.0329554,
0.562022, 0.0274185,
0.581395, 0.0259497,
0.605858, 0.0240799,
0.634807, 0.0222043,
0.420558, 0.0459021,
0.429722, 0.0461048,
0.438792, 0.0463578,
0.448846, 0.0456129,
0.45729, 0.0425723,
0.477541, 0.0391451,
0.497302, 0.0355328,
0.516571, 0.0321704,
0.538093, 0.0284098,
0.771436, 0.0063189,
0.569186, 0.0245593,
0.594529, 0.0225124,
0.625308, 0.0205883,
0.420405, 0.0459356,
0.429572, 0.0462061,
0.43837, 0.046363,
0.449207, 0.0454948,
0.456888, 0.0425717,
0.477404, 0.0389954,
0.497264, 0.0354787,
0.516605, 0.0321762,
0.538291, 0.0285482,
0.771614, 0.0063285,
0.569079, 0.02463,
0.594299, 0.022553,
0.62507, 0.0206001,
0.420545, 0.0460833,
0.429666, 0.0461442,
0.438782, 0.0463258,
0.449038, 0.0456628,
0.457222, 0.0425482,
0.477154, 0.0390412,
0.497132, 0.035476,
0.516648, 0.0322427,
0.5383, 0.0284373,
0.77135, 0.0063454,
0.569066, 0.0245548,
0.594487, 0.0225349,
0.625185, 0.0206038,
0.452338, 0.043478,
0.460865, 0.0437113,
0.468664, 0.0439583,
0.478241, 0.0433566,
0.485652, 0.0406439,
0.504499, 0.0373836,
0.523103, 0.0340758,
0.541155, 0.0309683,
0.56164, 0.0273367,
0.590881, 0.0237355,
0.614826, 0.0218433,
0.643806, 0.019862,
0.45098, 0.0436765,
0.460278, 0.0438775,
0.469027, 0.0440735,
0.479606, 0.0432587,
0.489718, 0.0405496,
0.499104, 0.0371919,
0.519276, 0.0333661,
0.538707, 0.0299746,
0.559191, 0.0268456,
0.568897, 0.0245861,
0.79609, 0.0058889,
0.604517, 0.0204191,
0.635274, 0.0185347,
0.451188, 0.043665,
0.460345, 0.0438937,
0.468977, 0.0441152,
0.479543, 0.0431657,
0.489863, 0.0406362,
0.498786, 0.0372363,
0.519294, 0.033366,
0.538702, 0.0299579,
0.559345, 0.0268715,
0.569073, 0.0246039,
0.796514, 0.0058658,
0.60443, 0.0204237,
0.635203, 0.0184367,
0.451228, 0.0436518,
0.460228, 0.0438671,
0.469362, 0.0440399,
0.479731, 0.0431393,
0.489826, 0.0405001,
0.49922, 0.0372227,
0.519278, 0.0334321,
0.538497, 0.0301006,
0.559418, 0.026864,
0.568975, 0.0245809,
0.796034, 0.005857,
0.604295, 0.0204161,
0.63506, 0.0185222,
0.48086, 0.0413874,
0.489347, 0.0416049,
0.497414, 0.0419323,
0.50698, 0.0411037,
0.516926, 0.038706,
0.525212, 0.0355689,
0.544118, 0.0320737,
0.561884, 0.0288459,
0.581695, 0.025889,
0.590742, 0.0238046,
0.623996, 0.0198535,
0.652856, 0.0179456,
0.48427, 0.0418149,
0.493537, 0.0420696,
0.502247, 0.0420454,
0.51229, 0.041236,
0.522817, 0.0385094,
0.534343, 0.0354013,
0.544401, 0.0318379,
0.564056, 0.0280192,
0.585162, 0.0248619,
0.594573, 0.0225106,
0.604506, 0.02049,
0.821573, 0.0055804,
0.644785, 0.0170417,
0.484254, 0.0418323,
0.493375, 0.0419646,
0.502275, 0.0419974,
0.512481, 0.0411781,
0.52305, 0.0385105,
0.534146, 0.0353545,
0.544219, 0.031793,
0.564158, 0.0281717,
0.585098, 0.0248771,
0.594187, 0.0225487,
0.604172, 0.020497,
0.821222, 0.0055918,
0.644607, 0.0170687,
0.484096, 0.0418326,
0.493525, 0.0418568,
0.502367, 0.0419786,
0.512627, 0.0411923,
0.522784, 0.038656,
0.534146, 0.0354622,
0.544118, 0.0317748,
0.56415, 0.0281253,
0.584982, 0.0248225,
0.594463, 0.0225526,
0.604659, 0.020402,
0.821256, 0.0055807,
0.644937, 0.0170065,
0.512522, 0.0393835,
0.520791, 0.0396778,
0.528919, 0.0398522,
0.538666, 0.0391002,
0.548046, 0.036709,
0.558319, 0.0338375,
0.567787, 0.0304228,
0.586463, 0.0269992,
0.605669, 0.0240845,
0.614683, 0.0218293,
0.624125, 0.0198704,
0.662466, 0.0165441,
0.529197, 0.0397006,
0.538632, 0.0396589,
0.547217, 0.0400646,
0.557278, 0.0392285,
0.558673, 0.0362167,
0.571702, 0.0334637,
0.583445, 0.0299894,
0.59444, 0.026478,
0.615342, 0.0230857,
0.625587, 0.0205318,
0.635171, 0.0185039,
0.644289, 0.0170144,
0.849196, 0.0054437,
0.529189, 0.039613,
0.538284, 0.0395742,
0.547304, 0.0399558,
0.557502, 0.0390798,
0.558822, 0.0361089,
0.571579, 0.0334689,
0.583685, 0.0299657,
0.594568, 0.026543,
0.615437, 0.0231544,
0.625281, 0.0205026,
0.634943, 0.0183881,
0.644565, 0.0169909,
0.849178, 0.0054605,
0.529443, 0.039469,
0.53845, 0.0397582,
0.546964, 0.0399645,
0.557251, 0.03914,
0.558555, 0.0362762,
0.571633, 0.0334916,
0.583714, 0.0299258,
0.594521, 0.026482,
0.615575, 0.0230582,
0.625255, 0.0206167,
0.634872, 0.0184284,
0.644654, 0.0170582,
0.849223, 0.0054488,
0.555097, 0.0374756,
0.563621, 0.0376185,
0.571172, 0.0379386,
0.580707, 0.0372139,
0.581613, 0.0345945,
0.593639, 0.0319264,
0.605298, 0.0287568,
0.61507, 0.0254598,
0.634548, 0.0223151,
0.643896, 0.0199141,
0.652986, 0.017922,
0.662372, 0.0164589};

double rate_calculate(unsigned int own_card[2][2], int public_num, unsigned int public_card[5][2], int &expect_value, int rnd){
  srand((int)time(0));
  int opponent_card[2][2];
  int public_card_copy[5][2];
  Cardset opponent_set = emptyCardset();
  Cardset own_set = emptyCardset();
  double win_cnt = 0;
  bool flag;
  int own_value = 0;
  int opponent_value = 0;
  unsigned long value = 0;
  for (int i = 0; i < public_num; i++){
    public_card_copy[i][0] = public_card[i][0];
    public_card_copy[i][1] = public_card[i][1];
  }
  for (int i = 0; i < 40000; i++){
    for (int j = public_num; j < 5; j++){
      flag = true;
      while(flag){
        public_card_copy[j][0] = random(13);
        public_card_copy[j][1] = random(4);
        flag = false;
        for (int k = 0; k < 2; k++){
          if((public_card_copy[j][0] == own_card[k][0]) && (public_card_copy[j][1] == own_card[j][1])){
            flag = true;
            break;
          }
        }
        for (int k = 0; k < j;k++){
          if ((public_card_copy[j][0] == public_card_copy[k][0]) && (public_card_copy[j][1] == public_card_copy[k][1])){
            flag = true;
            break;
          }
        }
      }
    }
    for (int j = 0; j < 2;j++){
      flag = true;
      while(flag){
        opponent_card[j][0] = random(13);
        opponent_card[j][1] = random(4);
        flag = false;
        for (int k = 0; k < 2; k++){
          if((opponent_card[j][0] == own_card[k][0]) && (opponent_card[j][1] == own_card[k][1])){
            flag = true;
            break;
          }
        }
        for (int k = 0;k < 5; k++){
          if((opponent_card[j][0] == public_card_copy[k][0]) && (opponent_card[j][1] == public_card_copy[k][1])){
            flag = true;
            break;
          }
        }
        for(int k = 0; k < j;k++){
          if ((opponent_card[j][0] == opponent_card[k][0]) && (opponent_card[j][1] == opponent_card[k][1])){
            flag = true;
          }
        }
      }
    }
    for(int j = 0; j < 2;j++){
      addCardToCardset(&opponent_set, opponent_card[j][1],opponent_card[j][0]);
      addCardToCardset(&own_set, own_card[j][1], own_card[j][0]);
    }
    for (int j = 0; j < 5;j++){
      addCardToCardset(&opponent_set, public_card_copy[j][1], public_card_copy[j][0]);
      addCardToCardset(&own_set, public_card_copy[j][1], public_card_copy[j][0]);
    }
    own_value = rankCardset(own_set);
    if (own_value < 20000){
      value += own_value;
    } else {
      printf("Error \n");
    }
    opponent_value = rankCardset(opponent_set);
    if (own_value > opponent_value){
      win_cnt += 1;
    }
    if (own_value == opponent_value){
      win_cnt += 0.5;
    }
    opponent_set = emptyCardset();
    own_set = emptyCardset();
  }
  expect_value = value / 40000;
  double rate = double(win_cnt / 40000.0);
  int i_1 = 13 * own_card[0][1] + own_card[0][0];
  int i_2 = 13 * own_card[1][1] + own_card[1][0];
  if (rnd == 0){
    int k = 51 * i_1 + i_2 - bool(i_2 > i_1);
    rate = table[2 * k] + 0.5 * table[2 * k + 1];
  }
  printf("Winning rate: %f  Expected_value: %d \n", rate , expect_value);
  return rate;
}

int probability_chosen(Game *game, MatchState *state, double rate, int rnd, double probs[NUM_ACTION_TYPES], int expected_value){
  int size = 0;
  int32_t min, max;
  raiseIsValid(game, &(state->state), &min, &max);
  if (i <= 2 * MAX){
  if (rate <= 0.7){
    probs[a_fold] = 1.0;
    probs[a_raise] = 0;
    probs[a_call] = 0;
  }
  else {
    if (rate > 0.85){
      probs[a_fold] = 0;
      probs[a_call] = 0.5 * (1 - rate);
      probs[a_raise] = 1 - probs[a_fold] - probs[a_call];
    }
    else {
      probs[a_fold] = 0.1 * (1 - rate);
      probs[a_call] = 0.7;
      probs[a_raise] = 1 - probs[a_fold] - probs[a_call];
    }
  }
  if (rnd > 0 && min > 3 * expected_value){
    probs[a_fold] = 1;
    probs[a_call] = 0;
    probs[a_raise] = 0;
  }
  if (rate > 0.85){
    size = random(expected_value) + expected_value; 
  } else {
    size = random(expected_value) + 0.3 * expected_value;
  }
  if(size < min){
    size = min;
  }
  if(size > max){
    size = max;
  }}
  else {
    probs[a_fold] = 0;
    probs[a_raise] = 1;
    probs[a_call] = 0;
    size = min;
  }
  printf("Fold: %f  Call: %f  Raise: %f \n",probs[a_fold], probs[a_call], probs[a_raise]);
  printf("Size: %d \n", size);
  return size;
}

/* TODO: implement your own poker strategy in this function!
 * 
 * The function is called when it is the agent's turn to play!
 * All the information about the game and the current state is preprocessed
 * and stored in game and state.
 * 
 * */
Action act(Game *game, MatchState *state, rng_state_t *rng) {
  Action action;

  double probs[ NUM_ACTION_TYPES ];
  double actionProbs[ NUM_ACTION_TYPES ];
  int playerID = state->viewingPlayer; // your own player ID
  double rate = 0; // the winning rate for you and your opponent
  unsigned int own_card[2][2]; // the two card of your own, 0:rank, 1:suit.
  int public_num = 0; // the number of public card
  unsigned int public_card[5][2]; // the shown public card
  int rnd = state->state.round; // number of round
  int all_in = numAllIn(game, &(state->state)); // whether the player choose all_in
  int hand = state->state.handId; // the game id: the hand^{th} game we play with our opponent
  int spent = state->state.spent[1 - playerID]; // the spent of opponent player

  printf("Player type: %d \n", i);
  
  if(all_in >= 1){
    i = 5 * MAX;
  }

  if ((hand == hand_global) && (opponent_spent < spent)){
    if (i <= 2 * MAX){
      i = i + 3 * MAX;
    }
    else {
      i = 5 * MAX;
    }
  }

  opponent_spent = spent;
  if (hand != hand_global){
    if (i >= 5){
      i = i - 5;
    }
    else{
      i = 0;
    }
  }
  hand_global = hand;

  if (rnd > 0){
    public_num = rnd + 2;
  }

  for (int i = 0;i < 2;i++){
    int t = state->state.holeCards[playerID][i];
    own_card[i][0] = t / 4;
    own_card[i][1] = t % 4;
  }

  for (int i = 0;i < public_num;i++){
    int t = state->state.boardCards[i];
    public_card[i][0] = t / 4;
    public_card[i][1] = t % 4;
  }

  int expect_value = 0;

  /* The following function shows the basic monte-carlo sampling to calculate the winning rate*/

  rate = rate_calculate(own_card, public_num, public_card, expect_value, rnd);

  /* The following function implement the probability and raise size chosen*/

  int size = probability_chosen(game, state, rate, rnd, probs, expect_value);

  if ((i > 2 * MAX) && opponent_spent > 400){
    probs[a_fold] = 1;
    probs[a_raise] = 0;
    probs[a_call] = 0;
  }
  
  /* build the set of valid actions */
  double p = 0.0;
  int a;
  for( a = 0; a < NUM_ACTION_TYPES; ++a ) {
    actionProbs[ a ] = 0.0;
  }

  /* consider fold */
  action.type = a_fold;
  action.size = 0;
  if( isValidAction( game, &(state->state), 0, &action ) ) {
    actionProbs[ a_fold ] = probs[ a_fold ];
    p += probs[ a_fold ];
  }

  /* consider call */
  action.type = a_call;
  action.size = 0;
  actionProbs[ a_call ] = probs[ a_call ];
  p += probs[ a_call ];

  /* consider raise */
  int32_t min, max;
  if( raiseIsValid( game, &(state->state), &min, &max ) ) {
    actionProbs[ a_raise ] = probs[ a_raise ];
    p += probs[ a_raise ];
  }

  /* normalise the probabilities  */
  bool flag = false;
  if(p == 0){
    actionProbs[a_call] = 1;
    p = 1;
    flag = 1;
  }
  assert( p > 0.0 );
  for( a = 0; a < NUM_ACTION_TYPES; ++a ) {

    actionProbs[ a ] /= p;
  }

  /* choose one of the valid actions at random */
  p = genrand_real2( rng );
  for( a = 0; a < NUM_ACTION_TYPES - 1; ++a ) {
    if( p <= actionProbs[ a ] ) {
      break;
    }
    p -= actionProbs[ a ];
  }
  action.type = (enum ActionType)a;
  if( a == a_raise ) {
    action.size = size;
  }
  else {
    action.size = 0;
  }

  return action;
}


/* Anything related with socket is handled below. */
/* If you are not interested with protocol details, you can safely skip these. */

int step(int len, char line[], Game *game, MatchState *state, rng_state_t *rng) {
  /* add a colon (guaranteed to fit because we read a new-line in fgets) */
  line[ len ] = ':';
  ++len;

  Action action = act(game, state, rng);

  /* do the action! */
  assert( isValidAction( game, &(state->state), 0, &action ) );
  int r = printAction( game, &action, MAX_LINE_LEN - len - 2, &line[ len ] );
  if( r < 0 ) {
    fprintf( stderr, "ERROR: line too long after printing action\n" );
    exit( EXIT_FAILURE );
  }
  len += r;
  line[ len ] = '\r';
  ++len;
  line[ len ] = '\n';
  ++len;

  return len;
}


int main( int argc, char **argv )
{
  int sock, len;
  uint16_t port;
  Game *game;
  MatchState state;
  FILE *file, *toServer, *fromServer;
  struct timeval tv;
  rng_state_t rng;
  char line[ MAX_LINE_LEN ];

  /* we make some assumptions about the actions - check them here */
  assert( NUM_ACTION_TYPES == 3 );

  if( argc < 3 ) {

    fprintf( stderr, "usage: player server port\n" );
    exit( EXIT_FAILURE );
  }

  /* Initialize the player's random number state using time */
  gettimeofday( &tv, NULL );
  init_genrand( &rng, tv.tv_usec );

  /* get the game */
  file = fopen( "./holdem.nolimit.2p.reverse_blinds.game", "r" );
  if( file == NULL ) {

    fprintf( stderr, "ERROR: could not open game './holdem.nolimit.2p.reverse_blind.game'\n");
    exit( EXIT_FAILURE );
  }
  game = readGame( file );
  if( game == NULL ) {

    fprintf( stderr, "ERROR: could not read game './holdem.nolimit.2p.reverse_blind.game'\n");
    exit( EXIT_FAILURE );
  }
  fclose( file );

  /* connect to the dealer */
  if( sscanf( argv[ 2 ], "%"SCNu16, &port ) < 1 ) {

    fprintf( stderr, "ERROR: invalid port %s\n", argv[ 2 ] );
    exit( EXIT_FAILURE );
  }
  sock = connectTo( argv[ 1 ], port );
  if( sock < 0 ) {

    exit( EXIT_FAILURE );
  }
  toServer = fdopen( sock, "w" );
  fromServer = fdopen( sock, "r" );
  if( toServer == NULL || fromServer == NULL ) {

    fprintf( stderr, "ERROR: could not get socket streams\n" );
    exit( EXIT_FAILURE );
  }

  /* send version string to dealer */
  if( fprintf( toServer, "VERSION:%"PRIu32".%"PRIu32".%"PRIu32"\n",
	       VERSION_MAJOR, VERSION_MINOR, VERSION_REVISION ) != 14 ) {

    fprintf( stderr, "ERROR: could not get send version to server\n" );
    exit( EXIT_FAILURE );
  }
  fflush( toServer );

  /* play the game! */
  while( fgets( line, MAX_LINE_LEN, fromServer ) ) {

    /* ignore comments */
    if( line[ 0 ] == '#' || line[ 0 ] == ';' ) {
      continue;
    }

    len = readMatchState( line, game, &state );
    if( len < 0 ) {

      fprintf( stderr, "ERROR: could not read state %s", line );
      exit( EXIT_FAILURE );
    }

    if( stateFinished( &state.state ) ) {
      /* ignore the game over message */

      continue;
    }

    if( currentPlayer( game, &state.state ) != state.viewingPlayer ) {
      /* we're not acting */

      continue;
    }

    len = step(len, line, game, &state, &rng);

    if( fwrite( line, 1, len, toServer ) != len ) {

      fprintf( stderr, "ERROR: could not get send response to server\n" );
      exit( EXIT_FAILURE );
    }
    fflush( toServer );
  }

  return EXIT_SUCCESS;
}
